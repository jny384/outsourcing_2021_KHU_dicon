{"ast":null,"code":"var _jsxFileName = \"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport storage from \"./firebase-manager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setImages(prevState => [...prevState, newImage]);\n    }\n  };\n\n  const handleUpload = () => {\n    const promises = [];\n    images.map(image => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(progress);\n      }, error => {\n        console.log(error);\n      }, () => {\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          // console.log(url);\n          setUrls(url);\n        });\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: urls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: urls || \"http://via.placeholde.com/300\",\n      alt: \"firebase-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Upload, \"8oOLY2g52tl1J7Fg7bjpXmmZqk0=\");\n\n_c = Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/upload.js"],"names":["React","useState","storage","Upload","images","setImages","urls","setUrls","progress","setProgress","handleChange","e","i","target","files","length","newImage","Math","random","prevState","handleUpload","promises","map","image","uploadTask","ref","name","put","push","on","snapshot","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AACxB,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,MAA/B,EAAuCH,CAAC,EAAxC,EAA4C;AACxC,YAAMI,QAAQ,GAAGL,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeF,CAAf,CAAjB;AACAI,MAAAA,QAAQ,CAAC,IAAD,CAAR,GAAiBC,IAAI,CAACC,MAAL,EAAjB;AACAb,MAAAA,SAAS,CAAEc,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeH,QAAf,CAAhB,CAAT;AACH;AACJ,GAND;;AAQA,QAAMI,YAAY,GAAG,MAAM;AACvB,UAAMC,QAAQ,GAAG,EAAjB;AACAjB,IAAAA,MAAM,CAACkB,GAAP,CAAYC,KAAD,IAAW;AAClB,YAAMC,UAAU,GAAGtB,OAAO,CAACuB,GAAR,CAAa,UAASF,KAAK,CAACG,IAAK,EAAjC,EAAoCC,GAApC,CAAwCJ,KAAxC,CAAnB;AACAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,UAAd;AACAA,MAAAA,UAAU,CAACK,EAAX,CACI,eADJ,EAEIC,QAAQ,IAAI;AACR,cAAMtB,QAAQ,GAAGS,IAAI,CAACc,KAAL,CACZD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GADvC,CAAjB;AAGAxB,QAAAA,WAAW,CAACD,QAAD,CAAX;AACH,OAPL,EAQI0B,KAAK,IAAI;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVL,EAWI,MAAM;AACFhC,QAAAA,OAAO,CACFuB,GADL,CACS,QADT,EAEKY,KAFL,CAEWd,KAAK,CAACG,IAFjB,EAGKY,cAHL,GAIKC,IAJL,CAIUC,GAAG,IAAI;AACT;AACAjC,UAAAA,OAAO,CAACiC,GAAD,CAAP;AACH,SAPL;AAQH,OApBL;AAsBH,KAzBD;AA0BH,GA5BD;;AA8BA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,QAAQ,EAAE9B;AAAtC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEU,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAId;AAAJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,GAAG,EAAEA,IAAI,IAAI,+BAAlB;AAAmD,MAAA,GAAG,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAQH;;GAnDuBH,M;;KAAAA,M","sourcesContent":["import React, {useState} from \"react\";\nimport storage from \"./firebase-manager\";\n\nexport default function Upload() {\n    const [images, setImages] = useState([]);\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n    \n    const handleChange = (e) => {\n        for (let i=0; i<e.target.files.length; i++) {\n            const newImage = e.target.files[i]\n            newImage[\"id\"] = Math.random();\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    }\n    \n    const handleUpload = () => {\n        const promises = []\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${image.name}`).put(image);\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                snapshot => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                error => {\n                    console.log(error);\n                },\n                () => {\n                    storage\n                        .ref(\"images\")\n                        .child(image.name)\n                        .getDownloadURL()\n                        .then(url => {\n                            // console.log(url);\n                            setUrls(url);\n                        })\n                }\n            )\n        })\n    }\n\n    return(\n        <>\n            <input type=\"file\" multiple onChange={handleChange}/>\n            <button onClick={handleUpload}>Upload</button>\n            <p>{urls}</p>\n            <img src={urls || \"http://via.placeholde.com/300\"} alt=\"firebase-image\"/>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}