{"ast":null,"code":"var _jsxFileName = \"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/banner/bannerView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport GetBanner from \"../../components/firebase/getBanner\";\nimport './bannerView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BannerView() {\n  _s();\n\n  const [inputData, setInputData] = useState([]);\n  useEffect(() => {\n    exec();\n    console.log('iP : ', inputData);\n  }, []);\n\n  async function exec() {\n    const data = await GetBanner();\n    await setInputData(data);\n  } // const [status, setStatus] = useState(false);\n  // const [imageNum, setImageNum] = useState(null);\n  // const openModal = (index) => {\n  //     setStatus(!status);\n  //     setImageNum(index);\n  // };\n  // //popup 모달을 끄기 위한 함수(어느 곳을 클릭해도 모달이 꺼지게게\n  // const closeModal = () => {\n  //     if (status == true) {\n  //         setStatus(false);\n  //         setImageNum(null);\n  //     }\n  // }\n  // const thumbUrl = inputData.thumbUrl;\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner_top\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"banner_title\",\n        children: \"\\uC628\\uB77C\\uC778 \\uD604\\uC218\\uB9C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner_main\",\n        children: inputData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"banner_list\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: openModal(index),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"banner\",\n                src: item.bannerUrl,\n                alt: \"OnlineBanner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"banner_under\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"From. \", item.from]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"To. \", item.to]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(BannerView, \"BeTAbw8dvBFrHyZyRbUzb75tqOw=\");\n\n_c = BannerView;\nconst style = {\n  component: {\n    display: 'grid',\n    gridColumnGap: '23px',\n    gridRowGap: '50px',\n    textAlign: 'center',\n    color: 'white'\n  },\n  thumb: {\n    width: '330px',\n    height: '440px'\n  },\n  title: {\n    fontsize: '24px',\n    textDecoration: 'none'\n  },\n  name: {\n    fontsize: '18px',\n    textDecoration: 'none'\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"BannerView\");","map":{"version":3,"sources":["/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/banner/bannerView.js"],"names":["React","useEffect","useState","GetBanner","BannerView","inputData","setInputData","exec","console","log","data","map","item","index","openModal","bannerUrl","from","to","style","component","display","gridColumnGap","gridRowGap","textAlign","color","thumb","width","height","title","fontsize","textDecoration","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAO,kBAAP;;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,IAAI;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,SAApB;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,iBAAeE,IAAf,GAAqB;AACjB,UAAMG,IAAI,GAAI,MAAMP,SAAS,EAA7B;AACA,UAAMG,YAAY,CAACI,IAAD,CAAlB;AACH,GAXgC,CAcjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAEQL,SAAS,CAACM,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,8BACI;AAAiB,YAAA,SAAS,EAAC,aAA3B;AAAA,mCACI;AAAK,cAAA,OAAO,EAAEC,SAAS,CAACD,KAAD,CAAvB;AAAA,sCACI;AACI,gBAAA,SAAS,EAAC,QADd;AAEI,gBAAA,GAAG,EAAED,IAAI,CAACG,SAFd;AAGI,gBAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,wCACI;AAAA,uCAAaH,IAAI,CAACI,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,qCAAWJ,IAAI,CAACK,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,kBADJ;AA4BH,SA7BD;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAyCH;;GAvEuBT,U;;KAAAA,U;AAyExB,MAAMc,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAG;AACRC,IAAAA,OAAO,EAAE,MADD;AAGRC,IAAAA,aAAa,EAAE,MAHP;AAIRC,IAAAA,UAAU,EAAE,MAJJ;AAKRC,IAAAA,SAAS,EAAC,QALF;AAMRC,IAAAA,KAAK,EAAC;AANE,GADF;AASVC,EAAAA,KAAK,EAAC;AACFC,IAAAA,KAAK,EAAC,OADJ;AAEFC,IAAAA,MAAM,EAAC;AAFL,GATI;AAaVC,EAAAA,KAAK,EAAC;AACFC,IAAAA,QAAQ,EAAE,MADR;AAEFC,IAAAA,cAAc,EAAC;AAFb,GAbI;AAkBVC,EAAAA,IAAI,EAAC;AACDF,IAAAA,QAAQ,EAAE,MADT;AAEDC,IAAAA,cAAc,EAAC;AAFd;AAlBK,CAAd","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport GetBanner from \"../../components/firebase/getBanner\";\nimport './bannerView.css'\nexport default function BannerView() {\n\n    const [inputData, setInputData] = useState([]);\n    useEffect(() => {\n        exec();\n        console.log('iP : ',inputData);\n    }, [])\n\n    async function exec(){\n        const data =  await GetBanner();\n        await setInputData(data);\n    }\n\n\n    // const [status, setStatus] = useState(false);\n    // const [imageNum, setImageNum] = useState(null);\n    // const openModal = (index) => {\n    //     setStatus(!status);\n    //     setImageNum(index);\n    // };\n    // //popup 모달을 끄기 위한 함수(어느 곳을 클릭해도 모달이 꺼지게게\n    // const closeModal = () => {\n    //     if (status == true) {\n    //         setStatus(false);\n    //         setImageNum(null);\n    //     }\n    // }\n\n    // const thumbUrl = inputData.thumbUrl;\n\n    return(\n        <>\n            <div className=\"banner_top\">\n                <span className=\"banner_title\">온라인 현수막</span>\n                <div className=\"banner_main\">\n                    {\n                        inputData.map((item, index) => {\n                            return(\n                                <div key={index} className=\"banner_list\">\n                                    <div onClick={openModal(index)}>\n                                        <img\n                                            className=\"banner\"\n                                            src={item.bannerUrl}\n                                            alt=\"OnlineBanner\"\n                                        />\n                                        <div className=\"banner_under\">\n                                            <span>From. {item.from}</span>\n                                            <span>To. {item.to}</span>\n                                        </div>\n                                    </div>\n\n                                    {/*{status ? (*/}\n                                    {/*    <div onClick={closeModal} className=\"pop_up\">*/}\n                                    {/*        <img*/}\n                                    {/*            className=\"pop_img\"*/}\n                                    {/*            src={inputData[imageNum].bannerUrl}*/}\n                                    {/*            alt=\"OnlineBanner\"*/}\n                                    {/*            style={style.thumb}*/}\n                                    {/*        />*/}\n                                    {/*    </div>*/}\n                                    {/*):null}*/}\n                                </div>\n\n\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst style = {\n    component : {\n        display: 'grid',\n\n        gridColumnGap: '23px',\n        gridRowGap: '50px',\n        textAlign:'center',\n        color:'white'\n    },\n    thumb:{\n        width:'330px',\n        height:'440px'\n    },\n    title:{\n        fontsize: '24px',\n        textDecoration:'none'\n\n    },\n    name:{\n        fontsize: '18px',\n        textDecoration:'none'\n    },\n}"]},"metadata":{},"sourceType":"module"}