{"ast":null,"code":"var _jsxFileName = \"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { render } from \"react-dom\";\nimport storage from \"./firebase-manager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState(0);\n\n  const handleChange = e => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setImages(prevState => [...prevState, newImage]);\n    }\n  };\n\n  const handleUpload = () => {\n    const promises = [];\n    images.map(image => {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(progress);\n      }, error => {\n        console.log(error);\n      }, async () => {\n        await storage.ref(\"images\").child(image.name).getDownloadURL().then(urls => {\n          // console.log(url);\n          setUrls(prevState => [...prevState, urls]);\n        });\n      });\n    });\n    Promise.all(promises).then(() => {\n      alert(\"all images uploaded\");\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), urls.map((url, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        children: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), urls.map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url || \"http://via.placeholde.com/300\",\n      alt: \"firebase-image\",\n      style: {\n        width: \"500px\"\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Upload, \"8oOLY2g52tl1J7Fg7bjpXmmZqk0=\");\n\n_c = Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/upload.js"],"names":["React","useState","render","storage","Upload","images","setImages","urls","setUrls","progress","setProgress","handleChange","e","i","target","files","length","newImage","Math","random","prevState","handleUpload","promises","map","image","uploadTask","ref","name","put","push","on","snapshot","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","Promise","all","alert","catch","err","url","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAD,CAAxC;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,MAAnC,EAA2CH,CAAC,EAA5C,EAAgD;AAC5C,YAAMI,QAAQ,GAAGL,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeF,CAAf,CAAjB;AACAI,MAAAA,QAAQ,CAAC,IAAD,CAAR,GAAiBC,IAAI,CAACC,MAAL,EAAjB;AACAb,MAAAA,SAAS,CAAEc,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeH,QAAf,CAAhB,CAAT;AACH;AACJ,GAND;;AAQA,QAAMI,YAAY,GAAG,MAAM;AACvB,UAAMC,QAAQ,GAAG,EAAjB;AACAjB,IAAAA,MAAM,CAACkB,GAAP,CAAYC,KAAD,IAAW;AAClB,YAAMC,UAAU,GAAGtB,OAAO,CAACuB,GAAR,CAAa,UAASF,KAAK,CAACG,IAAK,EAAjC,EAAoCC,GAApC,CAAwCJ,KAAxC,CAAnB;AACAF,MAAAA,QAAQ,CAACO,IAAT,CAAcJ,UAAd;AACAA,MAAAA,UAAU,CAACK,EAAX,CACI,eADJ,EAEKC,QAAD,IAAc;AACV,cAAMtB,QAAQ,GAAGS,IAAI,CAACc,KAAL,CACZD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GADvC,CAAjB;AAGAxB,QAAAA,WAAW,CAACD,QAAD,CAAX;AACH,OAPL,EAQK0B,KAAD,IAAW;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVL,EAWI,YAAY;AACR,cAAMhC,OAAO,CACRuB,GADC,CACG,QADH,EAEDY,KAFC,CAEKd,KAAK,CAACG,IAFX,EAGDY,cAHC,GAIDC,IAJC,CAIKjC,IAAD,IAAU;AACZ;AACAC,UAAAA,OAAO,CAAEY,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeb,IAAf,CAAhB,CAAP;AACH,SAPC,CAAN;AAQH,OApBL;AAsBH,KAzBD;AA0BAkC,IAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAZ,EACKkB,IADL,CACU,MAAM;AAACG,MAAAA,KAAK,CAAC,qBAAD,CAAL;AAA6B,KAD9C,EAEKC,KAFL,CAEYC,GAAD,IAAQT,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAFnB;AAGH,GA/BD;;AAiCA,sBACI;AAAA,4BACI;AAAU,MAAA,KAAK,EAAEpC,QAAjB;AAA2B,MAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,QAAQ,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEU,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,EAOKd,IAAI,CAACgB,GAAL,CAAS,CAACuB,GAAD,EAAMjC,CAAN,kBACN;AAAA,6BACI;AAAG,QAAA,IAAI,EAAEiC,GAAT;AAAc,QAAA,MAAM,EAAC,QAArB;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUjC,CAAV;AAAA;AAAA;AAAA;AAAA,YADH,CAPL,eAcI;AAAA;AAAA;AAAA;AAAA,YAdJ,EAeKN,IAAI,CAACgB,GAAL,CAAS,CAACuB,GAAD,EAAMjC,CAAN,kBACN;AACK,MAAA,GAAG,EAAEiC,GAAG,IAAI,+BADjB;AAEK,MAAA,GAAG,EAAC,gBAFT;AAGK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR;AAHZ,OAAUlC,CAAV;AAAA;AAAA;AAAA;AAAA,YADH,CAfL;AAAA,kBADJ;AAyBH;;GAvEuBT,M;;KAAAA,M","sourcesContent":["import React, {useState} from \"react\";\nimport {render} from \"react-dom\";\nimport storage from \"./firebase-manager\";\n\nexport default function Upload() {\n    const [images, setImages] = useState([]);\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n    \n    const handleChange = (e) => {\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i]\n            newImage[\"id\"] = Math.random();\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n    \n    const handleUpload = () => {\n        const promises = []\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${image.name}`).put(image);\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"images\")\n                        .child(image.name)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            // console.log(url);\n                            setUrls((prevState) => [...prevState, urls]);\n                        })\n                }\n            );\n        });\n        Promise.all(promises)\n            .then(() => {alert(\"all images uploaded\")})\n            .catch((err)=> console.log(err))\n    };\n\n    return(\n        <>\n            <progress value={progress} max=\"100\"/>\n            <br/>\n            <br/>\n            <input type=\"file\" multiple onChange={handleChange}/>\n            <button onClick={handleUpload}>Upload</button>\n            <br/>\n            {urls.map((url, i) => (\n                <div key={i}>\n                    <a href={url} target=\"_blank\">\n                        {url}\n                    </a>\n                </div>\n            ))}\n            <br/>\n            {urls.map((url, i) => (\n                <img key={i}\n                     src={url || \"http://via.placeholde.com/300\"}\n                     alt=\"firebase-image\"\n                     style={{width: \"500px\"}}\n                />\n            ))}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}