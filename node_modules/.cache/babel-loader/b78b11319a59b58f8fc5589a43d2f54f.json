{"ast":null,"code":"var _jsxFileName = \"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/post/uploadWorkImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport storage from \"../firebase/firebase-manager\";\nimport GetWorks from \"../firebase/getWorks\"; // import GetWorkImages from \"./getWorkImages\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadWorkImages(props) {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [clicked, setClicked] = useState(false); // const [directory, setDirectory] = useState(\"\");\n\n  const directory = props.directory;\n  const teamName = props.teamName;\n  const id = [];\n\n  const handleChange = e => {\n    if (images.length != 0) {\n      // console.log('a')\n      setImages([]);\n    }\n\n    ;\n\n    for (let i = 0; i < e.target.files.length; i++) {\n      id.push(Math.random());\n    }\n\n    for (let i = 0; i < e.target.files.length; i++) {\n      const sorted = id.sort(); // console.log(sorted)\n\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = sorted[i];\n      setImages(prevState => [...prevState, newImage]);\n    }\n  };\n\n  console.log('i', images); // const handleChangeDirectory = (e) => {\n  //     setDirectory(e.target.value);\n  // }\n\n  const handleUpload = () => {\n    setClicked(true);\n    const promises = [];\n    images.map(image => {\n      const uploadTask = storage.ref(`images/${teamName}/${directory}/works/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(progress);\n      }, error => {\n        console.log(error);\n      }, async () => {\n        await storage.ref(`images/${teamName}/${directory}/works/`).child(image.name).getDownloadURL().then(urls => {\n          setUrls(prevState => [...prevState, urls]); // console.log(urls)\n        });\n      });\n    });\n    Promise.all(promises) // .then(() => { })\n    .catch(err => console.log(err));\n  }; // const initializeInput = () => {\n  //     console.log('a')\n  //     setImages([]);\n  // }\n\n\n  console.log('u', urls); // console.log(\"image : \", images);\n  // console.log(\"urls : \", urls);\n\n  const sendText = async () => {\n    // handleUpload()\n    await props.getWorksUrl(urls);\n    await console.log('Works : ', urls);\n    await GetWorks(teamName, directory, images, urls);\n  }; // console.log(urls)\n  // console.log(teamName)\n  // console.log(directory)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clicked ? null : handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendText,\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), urls.map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url || \"http://via.placeholde.com/300\",\n      alt: \"works\",\n      style: {\n        height: \"50px\"\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadWorkImages, \"geEHLX9fNhBfr3QYfDLUv6STR6M=\");\n\n_c = UploadWorkImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadWorkImages\");","map":{"version":3,"sources":["/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/post/uploadWorkImages.js"],"names":["React","useState","storage","GetWorks","UploadWorkImages","props","images","setImages","urls","setUrls","progress","setProgress","clicked","setClicked","directory","teamName","id","handleChange","e","length","i","target","files","push","Math","random","sorted","sort","newImage","prevState","console","log","handleUpload","promises","map","image","uploadTask","ref","name","put","on","snapshot","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","Promise","all","catch","err","sendText","getWorksUrl","url","height"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport storage from \"../firebase/firebase-manager\";\nimport GetWorks from \"../firebase/getWorks\";\n// import GetWorkImages from \"./getWorkImages\";\n\nexport default function UploadWorkImages(props) {\n    const [images, setImages] = useState([]);\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n    const [clicked, setClicked] = useState(false);\n    // const [directory, setDirectory] = useState(\"\");\n    const directory = props.directory;\n    const teamName = props.teamName;\n\n    const id = [];\n    const handleChange = (e) => {\n        if (images.length != 0) {\n            // console.log('a')\n            setImages([])\n        };\n        for (let i = 0; i < e.target.files.length; i++){\n            id.push(Math.random())\n        }\n\n        for (let i = 0; i < e.target.files.length; i++) {\n            const sorted = id.sort();\n            // console.log(sorted)\n            const newImage = e.target.files[i]\n            newImage[\"id\"] = sorted[i];\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n    console.log('i',images)\n    // const handleChangeDirectory = (e) => {\n    //     setDirectory(e.target.value);\n    // }\n\n    const handleUpload = () => {\n        setClicked(true);\n        const promises = []\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${teamName}/${directory}/works/${image.name}`).put(image);\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(`images/${teamName}/${directory}/works/`)\n                        .child(image.name)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            setUrls((prevState) => [...prevState, urls]);\n                            // console.log(urls)\n                        })\n                }\n            );\n        });\n\n        Promise.all(promises)\n            // .then(() => { })\n            .catch((err)=> console.log(err))\n    };\n    // const initializeInput = () => {\n    //     console.log('a')\n    //     setImages([]);\n    // }\n\n    console.log('u',urls)\n    // console.log(\"image : \", images);\n    // console.log(\"urls : \", urls);\n\n    const sendText = async () => {\n        // handleUpload()\n        await props.getWorksUrl(urls);\n        await console.log('Works : ',urls)\n        await GetWorks(teamName, directory, images, urls);\n    }\n    // console.log(urls)\n    // console.log(teamName)\n    // console.log(directory)\n    return(\n        <>\n            <progress value={progress} max=\"100\"/>\n            <br/>\n            {/*<input onChange={handleChangeDirectory} placeholder=\"저장 폴더 이름\"/>*/}\n            <br/>\n            <input type=\"file\" multiple onChange={handleChange}/>\n            <button onClick={clicked ? null: handleUpload}>Upload</button>\n            <button onClick={sendText}>send</button>\n            <br/>\n            <br/>\n            {urls.map((url, i) => (\n                <img key={i}\n                     src={url || \"http://via.placeholde.com/300\"}\n                     alt=\"works\"\n                     style={{height: \"50px\"}}\n                />\n            ))}\n            <br/>\n            {/*<GetWorkImages urls={urls}/>*/}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}