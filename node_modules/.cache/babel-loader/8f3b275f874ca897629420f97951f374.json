{"ast":null,"code":"var _jsxFileName = \"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/post/uploadWorkImages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport storage from \"../firebase/firebase-manager\"; // import GetWorkImages from \"./getWorkImages\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UploadWorkImages(props) {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [urls, setUrls] = useState([]);\n  const [progress, setProgress] = useState(0); // const [directory, setDirectory] = useState(\"\");\n\n  const directory = props.directory;\n  const teamName = props.teamName;\n\n  const handleChange = e => {\n    for (let i = 0; i < e.target.files.length; i++) {\n      const newImage = e.target.files[i];\n      newImage[\"id\"] = Math.random();\n      setImages(prevState => [...prevState, newImage]);\n    }\n  }; // const handleChangeDirectory = (e) => {\n  //     setDirectory(e.target.value);\n  // }\n\n\n  const handleUpload = () => {\n    const promises = [];\n    images.map(image => {\n      const uploadTask = storage.ref(`images/${teamName}/${directory}/works/${image.name}`).put(image);\n      promises.push(uploadTask);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        setProgress(progress);\n      }, error => {\n        console.log(error);\n      }, async () => {\n        await storage.ref(`images/${teamName}/${directory}/works/`).child(image.name).getDownloadURL().then(urls => {\n          setUrls(prevState => [...prevState, urls]); // console.log(urls)\n        });\n      });\n    });\n    Promise.all(promises).then(() => {\n      props.getWorksUrl(urls);\n    }).catch(err => console.log(err));\n  }; // console.log(\"image : \", images);\n  // console.log(\"urls : \", urls);\n\n\n  const sendText = () => {\n    props.getWorksUrl(urls);\n    console.log(urls);\n  };\n\n  console.log(urls);\n  console.log(teamName);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n      value: progress,\n      max: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), urls.map((url, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url || \"http://via.placeholde.com/300\",\n      alt: \"works\",\n      style: {\n        height: \"50px\"\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UploadWorkImages, \"8oOLY2g52tl1J7Fg7bjpXmmZqk0=\");\n\n_c = UploadWorkImages;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadWorkImages\");","map":{"version":3,"sources":["/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/post/uploadWorkImages.js"],"names":["React","useState","storage","UploadWorkImages","props","images","setImages","urls","setUrls","progress","setProgress","directory","teamName","handleChange","e","i","target","files","length","newImage","Math","random","prevState","handleUpload","promises","map","image","uploadTask","ref","name","put","push","on","snapshot","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","Promise","all","getWorksUrl","catch","err","sendText","url","height"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport storage from \"../firebase/firebase-manager\";\n// import GetWorkImages from \"./getWorkImages\";\n\nexport default function UploadWorkImages(props) {\n    const [images, setImages] = useState([]);\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n    // const [directory, setDirectory] = useState(\"\");\n    const directory = props.directory;\n    const teamName = props.teamName;\n    \n    const handleChange = (e) => {\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i]\n            newImage[\"id\"] = Math.random();\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    // const handleChangeDirectory = (e) => {\n    //     setDirectory(e.target.value);\n    // }\n\n    const handleUpload = () => {\n        const promises = []\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${teamName}/${directory}/works/${image.name}`).put(image);\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(`images/${teamName}/${directory}/works/`)\n                        .child(image.name)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            setUrls((prevState) => [...prevState, urls]);\n                            // console.log(urls)\n                        })\n                }\n            );\n        });\n\n        Promise.all(promises)\n            .then(() => {\n                props.getWorksUrl(urls); })\n            .catch((err)=> console.log(err))\n    };\n\n    // console.log(\"image : \", images);\n    // console.log(\"urls : \", urls);\n\n    const sendText = () => {\n        props.getWorksUrl(urls);\n        console.log(urls)\n    }\n    console.log(urls)\n    console.log(teamName)\n\n    return(\n        <>\n            <progress value={progress} max=\"100\"/>\n            <br/>\n            {/*<input onChange={handleChangeDirectory} placeholder=\"저장 폴더 이름\"/>*/}\n            <br/>\n            <input type=\"file\" multiple onChange={handleChange}/>\n            <button onClick={handleUpload}>Upload</button>\n            <br/>\n            <br/>\n            {urls.map((url, i) => (\n                <img key={i}\n                     src={url || \"http://via.placeholde.com/300\"}\n                     alt=\"works\"\n                     style={{height: \"50px\"}}\n                />\n            ))}\n            <br/>\n            {/*<a onClick={sendText}>send</a>*/}\n            {/*<GetWorkImages urls={urls}/>*/}\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}