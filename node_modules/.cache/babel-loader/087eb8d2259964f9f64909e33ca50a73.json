{"ast":null,"code":"var _jsxFileName = \"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/works/worksView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { GetPostingInfo } from \"../../components/firebase/getPostingInfo\";\nimport './workView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Split = ({\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: text.split(\"\\n\").map(txt => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [txt, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Split;\nexport default function WorksView({\n  match\n}) {\n  _s();\n\n  useEffect(() => {\n    async function exec() {\n      const data = await GetPostingInfo(match.params.urlId);\n      setInputData(data);\n      console.log(data);\n    }\n\n    exec();\n  }, []);\n  const [inputData, setInputData] = useState('');\n  const name = inputData.name;\n  const email = inputData.email;\n  const workInfo = inputData.workInfo;\n  const workLink = inputData.workLink;\n  const workTitle = inputData.workTitle;\n  const youtubeLink = inputData.youtubeLink; // const split = workInfo||''.split('\\n');\n  // console.log(split, \"aa\")\n  // console.log(workInfo||''.split('\\n'));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student_area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left_workview\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"worker_name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left_detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"worker_email\",\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"worker_workLink\",\n            children: workLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right_workview\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"workTitle\",\n          children: workTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"workInfo_title\",\n            children: \" \\uC791\\uD488 \\uC18C\\uAC1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Split, {\n            text: workInfo || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work_youtube\",\n          children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            width: \"920px\",\n            height: \"518px\",\n            \"align-items\": \"center\",\n            url: youtubeLink,\n            style: style.youtubeLink,\n            id: \"youtubeLink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(WorksView, \"fF+wRAE29A6SlO6i6MzBO+9TCkU=\");\n\n_c2 = WorksView;\nconst style = {\n  youtubeLink: {\n    width: '920px'\n  }\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Split\");\n$RefreshReg$(_c2, \"WorksView\");","map":{"version":3,"sources":["/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/works/worksView.js"],"names":["React","useState","useEffect","ReactPlayer","GetPostingInfo","Split","text","split","map","txt","WorksView","match","exec","data","params","urlId","setInputData","console","log","inputData","name","email","workInfo","workLink","workTitle","youtubeLink","style","width"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\n\nimport {GetPostingInfo} from \"../../components/firebase/getPostingInfo\";\nimport './workView.css';\n\nconst Split = ({text}) => {\n    return <p>\n        {text.split(\"\\n\").map((txt) => (\n            <>\n                {txt}\n                <br />\n            </>\n        ))}\n    </p>;\n}\n\nexport default function WorksView({match}) {\n    useEffect(() => {\n        async function exec(){\n            const data =  await GetPostingInfo(match.params.urlId);\n            setInputData(data);\n            console.log(data);\n        }\n        exec();\n    }, [])\n\n    const [inputData, setInputData] = useState('');\n    const name =  inputData.name;\n    const email =  inputData.email;\n    const workInfo =  inputData.workInfo;\n    const workLink =  inputData.workLink;\n    const workTitle =  inputData.workTitle;\n    const youtubeLink =  inputData.youtubeLink;\n    // const split = workInfo||''.split('\\n');\n    // console.log(split, \"aa\")\n    // console.log(workInfo||''.split('\\n'));\n\n    return(\n        <>\n            <div className=\"student_area\">\n                <div className=\"left_workview\">\n                    <p id=\"worker_name\">{name}</p>\n                    <div className=\"left_detail\">\n                        <p id=\"worker_email\">{email}</p>\n                        <p id=\"worker_workLink\">{workLink}</p>\n                    </div>\n                </div>\n\n                <div className=\"right_workview\">\n                    <p id=\"workTitle\">{workTitle}</p>\n                    <div className=\"work_info\">\n                        <p id=\"workInfo_title\"> 작품 소개</p>\n                        {/*<p id=\"workInfo\">{split}</p>*/}\n                        <Split text={workInfo||''}/>\n                        {/*{workInfo.split(\"\\n\").map((line) => {*/}\n                        {/*    return (<span> {line} <br/> </span>); //줄 바꿈 인식*/}\n                        {/*})}*/}\n                    </div>\n                    <div className=\"work_youtube\">\n                        <ReactPlayer\n                            width=\"920px\"\n                            height=\"518px\"\n                            align-items=\"center\"\n                            url={youtubeLink}\n                            style={style.youtubeLink}\n                            id=\"youtubeLink\"/>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst style = {\n    youtubeLink : {\n        width: '920px'\n    }\n}"]},"metadata":{},"sourceType":"module"}