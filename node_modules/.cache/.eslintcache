[{"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/index.js":"1","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/App.js":"2","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/reportWebVitals.js":"3","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/HomeView.js":"4","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/decoIMG.js":"5","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/outLink.js":"6","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/guest/guestBook.js":"7","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/postWorks.js":"8","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/firebase-manager.js":"9","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/admin/onPost.js":"10","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/works/worksView.js":"11","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/getPostingInfo.js":"12","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/postGuestBook.js":"13","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/getGuestBook.js":"14","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/works/worksMain.js":"15","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/header.js":"16","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/footer.js":"17","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/works/uploadWorkImages.js":"18","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/works/uploadProfile.js":"19"},{"size":500,"mtime":1635261080030,"results":"20","hashOfConfig":"21"},{"size":1188,"mtime":1636482130703,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1635261080030,"results":"23","hashOfConfig":"21"},{"size":569,"mtime":1636482316185,"results":"24","hashOfConfig":"21"},{"size":2148,"mtime":1635347251239,"results":"25","hashOfConfig":"21"},{"size":1121,"mtime":1635267307788,"results":"26","hashOfConfig":"21"},{"size":1596,"mtime":1635962350729,"results":"27","hashOfConfig":"21"},{"size":233,"mtime":1636473068454,"results":"28","hashOfConfig":"21"},{"size":474,"mtime":1636472182714,"results":"29","hashOfConfig":"21"},{"size":3804,"mtime":1636483324544,"results":"30","hashOfConfig":"21"},{"size":2220,"mtime":1636479792547,"results":"31","hashOfConfig":"21"},{"size":909,"mtime":1636473068452,"results":"32","hashOfConfig":"21"},{"size":227,"mtime":1636487185779,"results":"33","hashOfConfig":"21"},{"size":568,"mtime":1636473068449,"results":"34","hashOfConfig":"21"},{"size":0,"mtime":1635968536852,"results":"35","hashOfConfig":"21"},{"size":716,"mtime":1636487121076,"results":"36","hashOfConfig":"21"},{"size":228,"mtime":1635973164472,"results":"37","hashOfConfig":"21"},{"size":2595,"mtime":1636487131864,"results":"38","hashOfConfig":"21"},{"size":1977,"mtime":1636483324538,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"a7p366",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/index.js",[],["85","86"],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/App.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/reportWebVitals.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/HomeView.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/decoIMG.js",["87","88"],"import Draggable from \"react-draggable\";\nimport React, {useState} from \"react\";\n\nexport default function DecoIMG() {\n    //draggable 요소를 위한 position 값 관히\n    const [position, setPosition] = useState({ x: 0, y: 0 });\n    const trackPos = (data) => {\n        setPosition({ x: data.x, y: data.y });\n    };\n    //popup 모달의 열림 여부 관리\n    const [status, setStatus] = useState(false)\n    const openModal = () => {\n      setStatus(!status);\n    };\n    //popup 모달을 끄기 위한 함수(어느 곳을 클릭해도 모달이 꺼지게게\n    const closeModal = () => {\n        if (status == true) {\n            setStatus(false);\n        }\n    }\n    return(\n        <>\n            <div onClick={closeModal}>\n                <div className=\"main_body\" style={style.main_body}>\n                    <Draggable onDrag={(e, data) => trackPos(data)} >\n                        <div className=\"deco_image\" style={style.deco_image} onDoubleClick={openModal}>\n                            <div style={style.box}>이미지 들어갈 자리</div>\n                            <p style={style.p}>deco</p>\n                        </div>\n                    </Draggable>\n                    {status ? (\n                        <div onClick={closeModal} className=\"pop_image\" style={style.set_body}>\n                            <div onClick={closeModal} style={style.set_box}>이미지 들어갈 자리</div>\n                        </div>\n                    ):null}\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst style = {\n    main_body: {\n        textAlign:'center',\n        width: '120px',\n        height: 'auto',\n    },\n    box: {\n        width: '120px',\n        height: '120px',\n        backgroundColor: \"red\",\n        margin:'0'\n    },\n    set_box: {\n        width: '70vw',\n        height: '70vh',\n        backgroundColor: \"blue\",\n        position: 'fixed',\n        top: '16vh',\n        left: '15vw',\n\n        zIndex: '100'\n    },\n    set_body: {\n        display: 'flex',\n    },\n    p: {\n        margin: '0'\n    },\n    deco_image: {\n        position: 'relative',\n        left: '50%',\n        zIndex:'1'\n    }\n}","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/outLink.js",["89"],"import React,{useState} from \"react\";\nimport Draggable from \"react-draggable\";\n\nexport default function OutLink() {\n    const [position, setPosition] = useState({ x: 0, y: 0 }); // box의 포지션 값\n    // 업데이트 되는 값을 set 해줌\n    const trackPos = (data) => {\n        setPosition({ x: data.x, y: data.y });\n    };\n    const handleClick = (e) => {\n        window.location.href = 'https://www.naver.com'; //이동할 링크\n    };\n\n    return(\n        <div className=\"main_body\" style={style.main_body} onDoubleClick={handleClick}>\n            <Draggable onDrag={(e, data) => trackPos(data)} >\n                <div className=\"box\" >\n                    <div style={style.box}>이미지 들어갈 자리</div>\n                    <p style={style.p}>outLink</p>\n                </div>\n            </Draggable>\n        </div>\n    )\n};\n\nconst style = {\n    main_body: {\n        textAlign:'center',\n        width: '120px',\n        height: 'auto',\n    },\n    box: {\n        width: '120px',\n        height: '120px',\n        backgroundColor: \"red\",\n        margin:'0'\n    },\n    p: {\n        margin: '0'\n    }\n}","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/guest/guestBook.js",["90"],"import React, {useEffect, useState} from \"react\";\nimport PostGuestBook from \"../../components/firebase/postGuestBook\";\nimport GetGuestBook from \"../../components/firebase/getGuestBook\";\n\nexport default function GuestBook() {\n    const [writer, setWriter] = useState('');\n    const [content, setContent] = useState('');\n\n    const onWriterChange = (e) => {\n        setWriter(e.target.value);\n    };\n\n    const onContentChange = (e) => {\n        setContent(e.target.value);\n    };\n\n    const postGusetBookContent = async () => {\n        await PostGuestBook(writer, content)\n    };\n\n    useEffect(()=> {\n        const guestBook = GetGuestBook;\n    }, [])\n\n    return (\n        <>\n            <div style={style.guest_input} className=\"guest_input\">\n                <input name=\"writer\" style={style.guest_name} placeholder=\"이름\" value=\"writer\" onChange={onWriterChange}/>\n                <input name=\"content\" style={style.guest_book} placeholder=\"내용 작성란입니다. 비방, 욕설, 광고 글 작성 시 삭제될 수 있습니다.\" value=\"content\" onChange={onContentChange}/>\n                <button onclick={postGusetBookContent()}>등록</button>\n            </div>\n        </>\n    )\n}\n\nconst style = {\n    guest_input : {\n        width : '330px',\n        height : '330px',\n        display: 'flex',\n        backgroundColor: 'red',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n\n    },\n    guest_name : {\n        width: '290px',\n        height: '40px'\n    },\n    guest_book : {\n        width : '290px',\n        height : '200px'\n    }\n}","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/postWorks.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/firebase-manager.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/admin/onPost.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/works/worksView.js",["91"],"import React, {useState, useEffect} from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\n\nimport {GetPostingInfo} from \"../../components/firebase/getPostingInfo\";\nimport './workView.css';\n\nconst Split = ({text}) => {\n    return <p>\n        {text.split(\"\\n\").map((txt) => (\n            <>\n                {txt}\n                <br />\n            </>\n        ))}\n    </p>;\n}\n\nexport default function WorksView({match}) {\n    useEffect(() => {\n        async function exec(){\n            const data =  await GetPostingInfo(match.params.urlId);\n            setInputData(data);\n            console.log(data);\n        }\n        exec();\n    }, [])\n\n    const [inputData, setInputData] = useState('');\n    const name =  inputData.name;\n    const email =  inputData.email;\n    const workInfo =  inputData.workInfo;\n    const workLink =  inputData.workLink;\n    const workTitle =  inputData.workTitle;\n    const youtubeLink =  inputData.youtubeLink;\n\n    return(\n        <>\n            <div className=\"student_area\">\n                <div className=\"left_workview\">\n                    <div id=\"student_pic\"> 사진 자리</div>\n                    <p id=\"worker_name\">{name}</p>\n                    <div className=\"left_detail\">\n                        <p id=\"worker_email\">{email}</p>\n                        <p id=\"worker_workLink\">{workLink}</p>\n                    </div>\n                </div>\n\n                <div className=\"right_workview\">\n                    <p id=\"workTitle\">{workTitle}</p>\n                    <div className=\"work_info\">\n                        <p id=\"workInfo_title\"> 작품 소개</p>\n                        <Split text={workInfo||''}/>\n                    </div>\n                    <div className=\"work_youtube\">\n                        <ReactPlayer\n                            width=\"920px\"\n                            height=\"518px\"\n                            align-items=\"center\"\n                            url={youtubeLink}\n                            style={style.youtubeLink}\n                            id=\"youtubeLink\"/>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst style = {\n    youtubeLink : {\n        width: '920px'\n    }\n}","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/getPostingInfo.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/postGuestBook.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/firebase/getGuestBook.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/works/worksMain.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/header.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/views/home/footer.js",[],"/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/works/uploadWorkImages.js",["92","93"],"import React, {useState} from \"react\";\nimport storage from \"../firebase/firebase-manager\";\n\nexport default function UploadWorkImages(props) {\n    const [images, setImages] = useState([]);\n    const [urls, setUrls] = useState([]);\n    const [progress, setProgress] = useState(0);\n    // const [directory, setDirectory] = useState(\"\");\n    const directory = props.directory;\n    \n    const handleChange = (e) => {\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newImage = e.target.files[i]\n            newImage[\"id\"] = Math.random();\n            setImages((prevState) => [...prevState, newImage]);\n        }\n    };\n\n    // const handleChangeDirectory = (e) => {\n    //     setDirectory(e.target.value);\n    // }\n\n    const handleUpload = () => {\n        const promises = []\n        images.map((image) => {\n            const uploadTask = storage.ref(`images/${directory}/${image.name}`).put(image);\n            promises.push(uploadTask);\n            uploadTask.on(\n                \"state_changed\",\n                (snapshot) => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                (error) => {\n                    console.log(error);\n                },\n                async () => {\n                    await storage\n                        .ref(\"images\")\n                        .child(image.name)\n                        .getDownloadURL()\n                        .then((urls) => {\n                            setUrls((prevState) => [...prevState, urls]);\n                        })\n                }\n            );\n        });\n\n        Promise.all(promises)\n            // .then(() => {alert(\"all images uploaded\")})\n            .catch((err)=> console.log(err))\n    };\n\n    // console.log(\"image : \", images);\n    // console.log(\"urls : \", urls);\n\n\n    return(\n        <>\n            <progress value={progress} max=\"100\"/>\n            <br/>\n            {/*<input onChange={handleChangeDirectory} placeholder=\"저장 폴더 이름\"/>*/}\n            <br/>\n            <input type=\"file\" multiple onChange={handleChange}/>\n            <button onClick={handleUpload}>Upload</button>\n            <br/>\n            <br/>\n            {urls.map((url, i) => (\n                <img key={i}\n                     src={url || \"http://via.placeholde.com/300\"}\n                     alt=\"firebase-image\"\n                     style={{width: \"100px\"}}\n                />\n            ))}\n        </>\n    )\n}","/Users/jeongnayeong/Desktop/2021_KHU_dicon_/outsourcing_2021_KHU_dicon/src/components/works/uploadProfile.js",["94"],"import React, {useState} from \"react\";\nimport storage from \"../firebase/firebase-manager\";\n\nexport default function UploadProfile(props) {\n    const [image, setImage] = useState([]);\n    const [url, setUrl] = useState([]);\n    const [progress, setProgress] = useState(0);\n    // const [directory, setDirectory] = useState(\"\");\n\n    const directory = props.directory;\n\n    const handleChange = (e) => {\n        if (e.target.files[0]) {\n            setImage(e.target.files[0]);\n        }\n    };\n\n    // const handleChangeDirectory = (e) => {\n    //     setDirectory(e.target.value);\n    // }\n\n    const handleUpload = () => {\n        const uploadTask = storage.ref(`images/${directory}/${image.name}`).put(image);\n        uploadTask.on(\n            \"state_changed\",\n            (snapshot) => {\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n                setProgress(progress);\n            },\n            (error) => {\n                console.log(error);\n            },\n            () => {\n                storage\n                    .ref(\"images\")\n                    .child(image.name)\n                    .getDownloadURL()\n                    .then((url) => {\n                        setUrl(url);\n                    });\n            }\n        );\n    }\n\n    // console.log(\"image : \", image);\n    // console.log(\"urls : \", url);\n\n    return(\n        <>\n            <progress value={progress} max=\"100\"/>\n            <br/>\n            {/*<input onChange={handleChangeDirectory} placeholder=\"저장 폴더 이름\"/>*/}\n            <br/>\n            <input type=\"file\" multiple onChange={handleChange}/>\n            <button onClick={handleUpload}>Upload</button>\n            <br/>\n            <img\n                     src={url || \"http://via.placeholde.com/300\"}\n                     alt=\"firebase-image\"\n                     style={{width: \"100px\"}}\n            />\n        </>\n    )\n}",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":6,"column":12,"nodeType":"101","messageId":"102","endLine":6,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":17,"column":20,"nodeType":"105","messageId":"106","endLine":17,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":5,"column":12,"nodeType":"101","messageId":"102","endLine":5,"endColumn":20},{"ruleId":"99","severity":1,"message":"107","line":22,"column":15,"nodeType":"101","messageId":"102","endLine":22,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":26,"column":8,"nodeType":"110","endLine":26,"endColumn":10,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":25,"column":28,"nodeType":"114","messageId":"115","endLine":25,"endColumn":30},{"ruleId":"116","severity":1,"message":"117","line":71,"column":17,"nodeType":"118","endLine":75,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":59,"column":13,"nodeType":"118","endLine":63,"endColumn":15},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'position' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'guestBook' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.urlId'. Either include it or remove the dependency array.","ArrayExpression",["121"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [match.params.urlId]",{"range":"124","text":"125"},[645,647],"[match.params.urlId]"]